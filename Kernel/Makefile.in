# -----------------------------------------------------------------------------
# Makefile.in for juggler/Kernel.  It requires GNU make.
# $Id$
# -----------------------------------------------------------------------------

default: all

# Include common definitions.
include @topdir@/Makefile.base

includedir	= @includedir@/Kernel
srcdir		= @srcdir@
top_srcdir	= @top_srcdir@
VJROOT		= ${top_srcdir}
VJ_SRCDIR	= @VJ_SRCDIR@/Kernel
WORKDIR		= ${topdir}/Kernel

# Define ${_LOCAL_CLEAN} to inform the shared clean target that there is a
# 'clean' target to be run besides the standard 'clean' target.
_LOCAL_CLEAN	= 1

# Add 'depend-recursive', 'newdepend-recursive' and 'install-recursive' to
# the appropriate variables so that dependencies in this directory and in
# ${SUBDIRS} will be generated and installations will be completed.  This has
# to be done before including <vj.dep.mk> and <vj.install.mk> unfortunately.
DEPEND_DEPS	+= depend-recursive
NEWDEPEND_DEPS	+= newdepend-recursive
INSTALL_DEPS	+= install-recursive

# Include source building, recursive, dependency and installation targets.
include ${MKPATH}/vj.compile.mk
include ${MKPATH}/vj.rec.mk
include ${MKPATH}/vj.dep.mk
include ${MKPATH}/vj.install.mk

# Prefix for recursive stuff.
DIRPRFX		= Kernel/

# Subdirectories to compile.
SUBDIRS = Pf GL

# Search path for source code and object files.
vpath
vpath %.c @srcdir@
vpath %.cpp @srcdir@
vpath %.o ${OBJDIR}

DEPEND_SRCS	:= vjAPI.cpp			\
                   vjDebug.cpp			\
                   vjDisplay.cpp		\
                   vjDisplayManager.cpp		\
                   vjDrawManager.cpp		\
                   vjFrustum.cpp		\
                   vjKernel.cpp			\
                   vjProjection.cpp		\
                   vjStreamLock.cpp		\
                   vjWallProjection.cpp		\
                   vjSGISystemFactory.cpp

KERNEL_OBJECTS	= $(addprefix $(OBJDIR)/,$(DEPEND_SRCS:.cpp=.o))

# ----------------------------------------------------------------------------- # Library targets.
# -----------------------------------------------------------------------------
all dbg opt dso ddso obj: ${KERNEL_OBJECTS}
	${MAKE} RECTARGET="$@" OPTIMIZER="${OPTIMIZIER}"	\
            BASE_OBJDIR="${BASE_OBJDIR}" recursive

install-recursive depend-recursive newdepend-recursive:
	target=`echo $@ | sed s/-recursive//` ;		\
            ${MAKE} RECTARGET="$$target" recursive

# -----------------------------------------------------------------------------
# Clean-up.
# -----------------------------------------------------------------------------
_clean:
	${MAKE} RECTARGET="clean" recursive

# -----------------------------------------------------------------------------
# Dependencies generated by makedepend(1).
# -----------------------------------------------------------------------------

# DO NOT DELETE THIS LINE -- make depend depends on it.

