# ************** <auto-copyright.pl BEGIN do not edit this line> **************
#
# VR Juggler is (C) Copyright 1998, 1999, 2000 by Iowa State University
#
# Original Authors:
#   Allen Bierbaum, Christopher Just,
#   Patrick Hartling, Kevin Meinert,
#   Carolina Cruz-Neira, Albert Baker
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# -----------------------------------------------------------------
# File:          $RCSfile$
# Date modified: $Date$
# Version:       $Revision$
# -----------------------------------------------------------------
#
# *************** <auto-copyright.pl END do not edit this line> ***************

# -----------------------------------------------------------------------------
# Makefile.in for juggler/Kernel.  It requires GNU make.
#
# Generated for use on @PLATFORM@
# -----------------------------------------------------------------------------

default: all

# Define ${_LOCAL_CLEAN} and ${_LOCAL_CLEANDEP} to inform the shared 'clean'
# target and shared 'cleandepend' target that there are local '_clean' and
# '_cleandepend' targets to be run besides the standard targets.
_LOCAL_CLEAN	= 1
_LOCAL_CLEANDEP	= 1

# Include common definitions.
include @topdir@/Makefile.base

includedir	= @includedir@/Kernel
srcdir		= @srcdir@
top_srcdir	= @top_srcdir@
INSTALL		= @INSTALL@
VJROOT		= ${top_srcdir}
VJ_SRCDIR	= @VJ_SRCDIR@/Kernel
WORKDIR		= ${topdir}/Kernel

# Add 'install-recursive' to ${INSTALL_DEPS} so installations will be
# completed.  This has to be done before including <vj.install.mk>
# unfortunately.
INSTALL_DEPS	+= install-recursive

# Prefix for recursive stuff.
DIRPRFX		= Kernel/

# Subdirectories to compile.
ifeq (@OPENGL_API@, Y)
    SUBDIRS	+= GL
endif

ifeq (@PERFORMER_API@, Y)
    SUBDIRS	+= Pf
endif

# Search path for source code and object files.
vpath
vpath %.c @srcdir@
vpath %.cpp @srcdir@
vpath %.${OBJ_FILE_SUFFIX} ${OBJDIR}

KERNEL_SRCS	:= vjAPI.cpp			\
		   vjApp.cpp			\
                   vjConfigManager.cpp		\
                   vjConfigChunkHandler.cpp	\
                   vjDebug.cpp			\
                   vjDependencyManager.cpp	\
                   vjDisplay.cpp		\
                   vjDisplayManager.cpp		\
                   vjDrawManager.cpp		\
                   vjFrustum.cpp		\
                   vjKernel.cpp			\
                   vjProjection.cpp		\
                   vjStreamLock.cpp		\
                   vjTrackedWallProjection.cpp	\
                   vjUser.cpp			\
                   vjWallProjection.cpp

ifeq (@OS_TYPE@, Win32)
    KERNEL_SRCS	+= vjWin32SystemFactory.cpp
else
    KERNEL_SRCS	+= vjSGISystemFactory.cpp
endif

KERNEL_OBJECTS	:= ${addprefix ${OBJDIR}/,${KERNEL_SRCS:.cpp=.${OBJ_FILE_SUFFIX}}}
DEPEND_FILES	:= ${KERNEL_SRCS:.cpp=.d}

# Include source building, recursive, dependency and installation targets.
include ${MKPATH}/vj.compile.mk
include ${MKPATH}/vj.rec.mk
include ${MKPATH}/vj.dep.mk
include ${MKPATH}/vj.install.mk

# -----------------------------------------------------------------------------
# Library targets.
# -----------------------------------------------------------------------------
all dbg opt dso ddso obj: ${KERNEL_OBJECTS}
	@${MAKE} RECTARGET="$@" OPTIMIZER="${OPTIMIZER}"	\
            BASE_OBJDIR="${BASE_OBJDIR}" recursive

install-recursive:
	@target=`echo $@ | sed s/-recursive//` ;		\
            ${MAKE} RECTARGET="$$target" recursive

# -----------------------------------------------------------------------------
# Clean-up.
# -----------------------------------------------------------------------------
CLEAN_FILES	+= ${KERNEL_OBJECTS}

_clean:
	@${MAKE} RECTARGET="clean" recursive

_cleandepend:
	@${MAKE} DO_CLEANDEPEND=1 RECTARGET="cleandepend" recursive

# -----------------------------------------------------------------------------
# Include dependencies generated by make automatically.
# -----------------------------------------------------------------------------
ifndef DO_CLEANDEPEND
    include ${DEPEND_FILES}
endif
