chunk chunkinchunktest "chunk in chunk test" ""
  Name String 1 "Name" "Unique name of an instance of this chunk type"
  thechunk EmbeddedChunk -1 "the chunk" vj_enumeration { "innerchunk" } ""
  bigchunk EmbeddedChunk 2 "big chunk" vj_valuelabels { "first display" "second display" } vj_enumeration { "display" } ""
  end
chunk innerchunk "inner chunk" ""
  Name String 1 "Name" "Unique name of an instance of this chunk type"
  KeyMod Int 1 "Key Modifier" ""
  KeyPress Int 1 "Key Press" ""
  end   
chunk flockobirds "flock of birds" ""
  samplewenum int 1 sample vj_enumeration { firstenum secenum fourthenum=4 } "no help"
  port string 1 port ""
  offset float 3 offset  ""
  baudrate int 1 baud ""
  end

chunk ptrtest "ptrtest" ""
  ptr chunk 1 ptr vj_enumeration { PosProxy DigProxy AnaProxy } "test chunk pointers"
  unit int 1 unit "device unit?"
  end

chunk enumtest "enumtest" ""
  end



# here's some real stuff
chunk display "Display CFG" ""
  name string 1 name ""
  projectiontype string 1 projectiontype ""
  origin int 2 origin "Window origin"
  size int 2 size "Window size"
  SGIpipe int 1 SGIpipe "Graphics pipe (SGI only)"
  xdisplay string 1 xdisplay "X Display Name"
  stereo bool 1 stereo ""
  border bool 1 border ""
  lowerleft float 3 lowerleft ""
  lowerright float 3 lowerright ""
  upperleft float 3 upperleft ""
  sillyptr chunk -1 "sillyptr" { display inputgroup } ""
  end

chunk InputGroup "InputGroup" ""
  name string 1 name ""
  head int 1 head "The Position Proxy # for the head"
  wand int 1 wand "The Position Proxy # for the wand"
  
  dummyPos float 3 dummyPos "The default position for the dummyPos"
  dummyOr  float 3 dummyOr "The default orientation for the dummyPos"
  
  end

chunk IBox "Ibox" ""
  name string 1 name ""
  port string 1 port ""
  portnum int 1 portnum "" # the IBox takes a port NUMBER, I think its from /dev/ttyd##
  baud int 1 baud ""
  
  end

chunk Flock "Flock" ""
  name string 1 name ""
  port string 1 port ""
  baud int 1 baud ""
  num int 1 num  "" # number of units
  # transform - way to transform from the coordinates returned by the
  # tracker to coords of the c2.
  transform float 6 transform ""
  # actually, it might be better to have the transform split into 2
  # parameters - one for the xyz and one for the azi/elev/roll, just
  # because I'm trying to work units for distances into the config file
  # structure, and distance would be a different type than float.
  # If you're ok with that, andy, comment out the transorm line above
  # and uncomment these:
  translate float 3 translate "" # someday'll be distance instead of float
  rotate float 3 rotate "" # we should probably establish a single convention
                         # for angles - degrees or radians?
  # some more stuff like hemisphere & s.
  calfile string 1 calfile ""
  end

chunk PosProxy "PosProxy" ""
  # is number the best identification?
  number int 1 number ""
  device string 1 device ""
  unit int 1 unit ""
  # ok.. xform is a problem with how I want to do units.  Unless we separate
  # the translation from the rotation :(
  transform float 6 transform ""
  enabletransform bool 1 enabletransform ""
  end

chunk DigProxy "DigProxy" ""
  # Digital Proxy 
  number int 1 number "Which digital proxy # we're configuring"
  device string 1 device "The device name to hook up the proxy to"
  unit int 1 unit "The unit number in the device to query for getData's"
  
  end
  
chunk AnaProxy "anaproxy" ""
  # Analog Proxy 
  number int 1 number "Which analog proxy # we're configuring"
  device string 1 device "The device name to hook up the proxy to"
  unit int 1 unit "The unit number in the device to query for getData's"
  
  end

chunk C2Setup "c2 setup" ""
  walls string -1 walls "" #this'd be a good place for an enumeration.
  # ^--- I guess that's ok, but whoever uses this chunk will have to 
  #      interpret the wall names.
  c2width float 1 c2width ""
  c2height float 1 c2height ""
  c2depth float 1 c2depth ""  #???
  end

chunk varvaltest "varvaltest" ""
  name string 1 name ""
  boolprop boolean 1 boolprop ""
  end

end


