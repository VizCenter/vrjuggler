# ************** <auto-copyright.pl BEGIN do not edit this line> **************
#
# VR Juggler is (C) Copyright 1998, 1999, 2000 by Iowa State University
#
# Original Authors:
#   Allen Bierbaum, Christopher Just,
#   Patrick Hartling, Kevin Meinert,
#   Carolina Cruz-Neira, Albert Baker
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# -----------------------------------------------------------------
# File:          $RCSfile$
# Date modified: $Date$
# Version:       $Revision$
# -----------------------------------------------------------------
#
# *************** <auto-copyright.pl END do not edit this line> ***************

# -----------------------------------------------------------------------------
# Makefile.in for juggler/samples/pf/pfNav.  It requires GNU make.
#
# Generated for use on @PLATFORM@
# -----------------------------------------------------------------------------

.SUFFIXES: .cpp .@OBJ_FILE_SUFFIX@

srcdir		= @srcdir@

EXTRA_FLAGS	= @APP_EXTRA_FLAGS@ @APP_EXTRA_FLAGS_PF@
COMPILE		= @CXX@ @DEFS@ $(VJ_INCLUDES) @CPPFLAGS@ @CXXFLAGS@ @DBG_FLAGS@ $(EXTRA_FLAGS)
LINK		= @CXX@ @CPPFLAGS@ @CXXFLAGS@ @EXTRA_LINK_FLAGS@ $(EXTRA_FLAGS)

VJ_INCLUDES	= @INCLUDES@ $(AW_INCLUDES) -I$(VJ_BASE_DIR)/include	\
                  -I$(srcdir) -I$(VJ_BASE_DIR)/@VJ_SHARE_DIR@/samples/nav \
                  -I$(VJ_BASE_DIR)/@VJ_SHARE_DIR@/samples/pf/pfTools
VJ_LIBS		= @APP_VJ_LIBS_BEGIN@ @APP_VJ_LIBS_BASIC@ @APP_VJ_LIBS_GL@ @APP_VJ_LIBS_PF@ $(VJ_AUDIO_LIBS) @APP_VJ_LIBS_END@  @APP_LIBS_BASIC@ 

VJ_LIB_DEPS	= $(VJ_BASE_DIR)/lib@LIBBITSUF@/libJuggler.a		\
                  $(VJ_BASE_DIR)/lib@LIBBITSUF@/libJuggler_ogl.a	\
                  $(VJ_BASE_DIR)/lib@LIBBITSUF@/libJuggler_pf.a

# Uncomment all of the following lines if you have AudioWorks and your
# application needs audio.
#AW_INCLUDES 	= @APP_EXTRA_INC_AW@
#AW_LIBS		= @APP_EXTRA_LIBS_AW@
#VJ_AUDIO_LIBS	= @APP_VJ_LIBS_AW@

vpath %.cpp $(srcdir) $(VJ_BASE_DIR)/@VJ_SHARE_DIR@/samples/nav
vpath %.cpp $(VJ_BASE_DIR)/@VJ_SHARE_DIR@/samples/tools
vpath %.cpp $(VJ_BASE_DIR)/@VJ_SHARE_DIR@/samples/pf/pfTools

# This Performer sample program requires the following libraries to be linked:
#
#   -lpf_ogl -lpfdu_ogl -lpfui -lpfutil_ogl -limage -lGLU -lGL -lX11 -lXext -lm
#
# If the library uses POSIX threads, the appropriate pthread enabling option
# must also be added to the list of libraries.  In most cases, this will be
# "-lpthread".
#
# The proper library path must be specified depending on the Application
# Binary Interface (ABI) used.  For n32 binaries, use -L/usr/lib32.  For
# 64-bit binaries, use -L/usr/lib64.
EXTRA_LIBS	= @APP_EXTRA_LIBS_BEGIN@ @APP_EXTRA_LIBS_BASIC@ $(AW_LIBS) @APP_EXTRA_LIBS_PF@ @APP_EXTRA_LIBS_GL@ @APP_EXTRA_LIBS_END@

COMMON_OBJECTS	= simplePfNavApp.@OBJ_FILE_SUFFIX@	\
                  pfFileIO.@OBJ_FILE_SUFFIX@		\
                  pfTerryCollide.@OBJ_FILE_SUFFIX@	\
                  pfTerryPogoCollide.@OBJ_FILE_SUFFIX@	\
                  pfTerryBoxCollide.@OBJ_FILE_SUFFIX@	\
                  pfMPStats.@OBJ_FILE_SUFFIX@

PFNAV_OBJECTS	= pfNav.@OBJ_FILE_SUFFIX@ $(COMMON_OBJECTS)

# -----------------------------------------------------------------------------
# Targets.
# -----------------------------------------------------------------------------
default: pfNav

all: pfNav

pfNav: $(PFNAV_OBJECTS) $(VJ_LIB_DEPS)
	$(LINK) -o $@ $(PFNAV_OBJECTS) $(VJ_LIBS) $(EXTRA_LIBS)

.cpp.@OBJ_FILE_SUFFIX@:
	$(COMPILE) @OBJ_NAME_FLAG@ -c $<

# -----------------------------------------------------------------------------
# Clean-up.
# -----------------------------------------------------------------------------
clean:
	rm -f pfNav $(PFNAV_OBJECTS) *core
	rm -rf ./ii_files

# -----------------------------------------------------------------------------
# Dependency stuff.
# -----------------------------------------------------------------------------
DEP_GEN_FLAG	= @DEP_GEN_FLAG@
DEPEND_FILES	= $(PFNAV_OBJECTS:.@OBJ_FILE_SUFFIX@=.d)

# This expression reformats the output from the dependency text to be of the
# form:
#
#     file1.o file1.d : ...
#
# where file1 is the value in $* and file1.d is $@.  It handles output from
# the C and C++ compilers which prints only the object file to be created ($*).
_CC_SED_EXP	= '\''s/\($*\)\.@OBJ_FILE_SUFFIX@[ :]*/.\/\1.@OBJ_FILE_SUFFIX@ $@: /g'\''

%.d: %.cpp
	@echo "Updating dependency file $@ ..."
	@$(SHELL) -ec '$(COMPILE) $(DEP_GEN_FLAG) $< |			\
                       sed $(_CC_SED_EXP) > $@ ; [ -s $@ ] || rm -f $@'

-include $(DEPEND_FILES)
