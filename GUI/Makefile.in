# -----------------------------------------------------------------------------
# Makefile.in for juggler/GUI.  It requires GNU make.
# $Id$
# -----------------------------------------------------------------------------

default: VjControl.jar

srcdir	= @srcdir@

# JDK-related variables.  ${JAVAC_CMD} is the compile line for javac when
# building .java files.
GUI_CLASSPATH	= ${srcdir}:${JDK_HOME}/lib/classes.zip
JAR		= @JAR@
JAVAC		= @JAVAC@
JAVAC_CMD	= ${JAVAC} -d . -classpath ${GUI_CLASSPATH}
JDK_HOME	= @JDK_HOME@

# If the user defined ${CLASSPATH} (either as an environment variable or a
# command-line argument), put it in ${GUI_CLASSPATH}.  Otherwise, leave it
# out.
ifdef CLASSPATH
    GUI_CLASSPATH	:= ${CLASSPATH}:${GUI_CLASSPATH}
endif

# Include common definitions.
include @topdir@/Makefile.base

# Include the .mk files for VjConfig and VjGUI so that the Java code in those
# directories can be built using this Makefile.
include ${srcdir}/VjConfig/VjConfig.mk
include ${srcdir}/VjPerf/VjPerf.mk
include ${srcdir}/VjGUI/VjGUI.mk
include ${srcdir}/VjGUI/chunkdesc/chunkdesc.mk
include ${srcdir}/VjGUI/configchunk/configchunk.mk
include ${srcdir}/VjGUI/util/util.mk

# Search path information.
vpath
vpath %.java @srcdir@/VjConfig @srcdir@/VjPerf @srcdir@/VjGUI @srcdir@/VjGUI/chunkdesc @srcdir@/VjGUI/configchunk @srcdir@/VjGUI/util
vpath %.class VjConfig VjPerf VjGUI VjGUI/chunkdesc VjGUI/configchunk VjGUI/util

# -----------------------------------------------------------------------------
# Library targets.
# -----------------------------------------------------------------------------
all: VjControl.jar

# there's no way to append to a jar file, so this must all be done in one
# step.  This is incredibly stupid...
VjControl.jar: ${VJCONFIG_OBJS} ${VJPERF_OBJS} ${VJGUI_OBJS} ${VJGUICHUNKDESC_OBJS}	\
               ${VJGUICONFIGCHUNK_OBJS} ${VJGUIUTIL_OBJS} VjFiles
	${JAR} cvf VjControl.jar VjGUI/*.class VjGUI/chunkdesc/*.class	\
            VjGUI/configchunk/*.class VjGUI/util/*.class		\
            VjConfig/*.class VjPerf/*.class VjFiles

VjFiles:
	${PERL} ${scriptdir}/install-dir.pl -i ${srcdir}/VjFiles	\
            -o ${topdir}/GUI/VjFiles

VjPerf/%.class: %.java
	${JAVAC_CMD} $<

VjConfig/%.class: %.java
	${JAVAC_CMD} $<

VjGUI/%.class: %.java
	${JAVAC_CMD} $<

# -----------------------------------------------------------------------------
# Clean-up.
# -----------------------------------------------------------------------------
CLEAN_FILES	+= ${VJCONFIG_OBJS} VjConfig/*~ ${VJPERF_OBJS} VjPerf/*~ ${VJGUI_OBJS} VjGUI/*~	\
                   ${VJGUICHUNKDESC_OBJS} VjGUI/chunkdesc/*~		\
                   ${VJGUICONFIGCHUNK_OBJS} VjGUI/configchunk/*~	\
                   ${VJGUIUTIL_OBJS} VjGUI/util/*~

# Append VjFiles to ${CLEAN_DIRS} only if ${srcdir} is not the current
# directory.  If ${srcdir} is the current directory, removing VjFiles would
# blow away the VjFiles directory in the source tree.
ifneq (${srcdir}, .)
    CLEAN_DIRS	+= VjFiles
endif

clobber:
	${MAKE} clean
	rm VjControl.jar
